{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kalpanagollapalli/React/react-prct/src/components/Toggle1.js\";\nimport React, { Component } from 'react';\n\nclass Toggle1 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      this.setState(state => ({\n        isToggledOn: !state.isToggledOn\n      }));\n    };\n\n    this.state = {\n      isToggledOn: true\n    }; // this.handleClick = this.handleClick.bind(this)\n  }\n\n  // To avoid binidng we can wither declare handleClick as arrow function in OR out of render method.\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.handleClick,\n      children: this.state.isToggledOn ? 'ON' : 'OFF'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Toggle1;","map":{"version":3,"sources":["/Users/kalpanagollapalli/React/react-prct/src/components/Toggle1.js"],"names":["React","Component","Toggle1","constructor","props","handleClick","setState","state","isToggledOn","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAE5BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAQlBC,WARkB,GAQL,MAAM;AACf,WAAKC,QAAL,CAAcC,KAAK,KAAK;AACpBC,QAAAA,WAAW,EAAG,CAACD,KAAK,CAACC;AADD,OAAL,CAAnB;AAIH,KAbiB;;AAGd,SAAKD,KAAL,GAAa;AAAEC,MAAAA,WAAW,EAAC;AAAd,KAAb,CAHc,CAKf;AACF;;AASL;AAGAC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAQ,MAAA,OAAO,EAAE,KAAKJ,WAAtB;AAAA,gBACA,KAAKE,KAAL,CAAWC,WAAX,GAAyB,IAAzB,GAAgC;AADhC;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA1B+B;;AA6BhC,eAAeN,OAAf","sourcesContent":["import React, { Component } from 'react'\n\nclass Toggle1 extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = { isToggledOn:true }\n\n       // this.handleClick = this.handleClick.bind(this)\n    }\n\n    handleClick =() => {\n        this.setState(state => ({\n            isToggledOn : !state.isToggledOn\n\n        }));\n    }\n\n// To avoid binidng we can wither declare handleClick as arrow function in OR out of render method.\n\n\nrender(){\n    return (\n        <button onClick={this.handleClick}>\n       {this.state.isToggledOn ? 'ON' : 'OFF'}\n        </button>\n    )\n}\n}\n\nexport default Toggle1"]},"metadata":{},"sourceType":"module"}